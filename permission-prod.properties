tmp.dir=/opt/tomcat8/upload

#-----------------------------------------------------------------------------------------
multipart.enabled=true
server.context-path=/permission
server.port=8084
#---------------- Datasource props --------------------------------------------------
spring.datasource.platform=postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://fluance-stunnel:5432/ehprofile?ssl=true
spring.datasource.username=authenticator
spring.datasource.password=12345

# The following should all trigger validation of (idle) connections 
# and when an exception occurs or the idle period has passed 
# the connections will be removed from the pool.
spring.datasource.max-active=30
# specify the number of initial connections
spring.datasource.initial-size=8
# specify the min and max number of idle connections
spring.datasource.max-idle=8
spring.datasource.min-idle=1
# To validate connection we need to specify a validation-query and when to validate. 
# As we want to validate periodically, 
# instead of when a connection is retrieved from the pool 
# (this to prevent broken connections in our pool).
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1
# Now that we are also validating while a connection is idle, 
# we need to specify how often we want to run this query 
# for the connections and when a connection is considered idle.
# defaults to 5000
spring.datasource.time-between-eviction-runs-millis=5000
# defaults to 60000
spring.datasource.min-evictable-idle-time-millis=60000

# Hibernate specific settings
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=net.fluance.app.spring.data.support.orm.hibernate.dialect.JsonPostgreSQL9Dialect

springfox.swagger.enable=false

## FEHC-4253 MW - Add configurable cache in permission evaluation
permissionCacheEnabled=true

#------------------------------ Permissions conf ----------------------------------------
permission.management.user=mgr
permission.management.password=mgr

oauth2.token.issue.path=
oauth2.token.revoke.path=
oauth2.token.validate.path=

authorization.server.host=auth.fluance.local
authorization.server.https.port=8447
authorization.server.http.port=8080

authorization.server.client.auth.base64=abcdefghijklmnoprst

security.preferred.scheme=https

springfox.swagger.enable=false

#----------------------------------------------------------------------------------------
#Secure Spring actuator endpoints
endpoints.actuator.enabled=true
endpoints.sensitive=true
endpoints.jmx.unique-names=true
management.security.enabled=false
endpoints.env.enabled=false

spring.boot.admin.url=https://spring-boot-admin.fluance.net:6060
spring.boot.admin.username=admin
spring.boot.admin.password=12345
spring.application.name=Permission
spring.boot.admin.client.service-url=https://permission.fluance.net:8084/permission
spring.boot.admin.client.metadata.user.name=fluance
spring.boot.admin.client.metadata.user.password=12345

logging.file=/var/logs/logs/permission.log
